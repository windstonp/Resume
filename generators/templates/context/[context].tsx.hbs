import React from 'react';

type {{pascalCase name}}ContextData = Record<string, never>;

type {{pascalCase name}}ProviderProps = {
  children: React.ReactNode;
};

export const {{pascalCase name}}ContextDefaultValues = {};

export const {{pascalCase name}}Context = React.createContext<{{pascalCase name}}ContextData>(
  {{pascalCase name}}ContextDefaultValues,
);

export function {{pascalCase name}}Provider(props: {{pascalCase name}}ProviderProps) {
  const value = React.useMemo(() => ({}), []);

  return <{{pascalCase name}}Context.Provider value={value} {...props} />;
}

export function use{{pascalCase name}}() {
  const context = React.useContext({{pascalCase name}}Context);


  if (!context) {
    throw new Error(`use{{pascalCase name}} must be used within a {{pascalCase name}}Provider`));
  }

  return context;
}
